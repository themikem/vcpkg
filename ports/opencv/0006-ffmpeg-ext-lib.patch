--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1219,11 +1219,7 @@ if(WITH_1394 OR HAVE_DC1394)
 endif()
 
 if(WITH_FFMPEG OR HAVE_FFMPEG)
-  if(WIN32)
-    status("    FFMPEG:"       HAVE_FFMPEG         THEN "YES (prebuilt binaries)"                  ELSE NO)
-  else()
-    status("    FFMPEG:"       HAVE_FFMPEG         THEN YES ELSE NO)
-  endif()
+  status("    FFMPEG:"         HAVE_FFMPEG                THEN YES                                         ELSE NO)
   status("      avcodec:"      FFMPEG_libavcodec_FOUND    THEN "YES (ver ${FFMPEG_libavcodec_VERSION})"    ELSE NO)
   status("      avformat:"     FFMPEG_libavformat_FOUND   THEN "YES (ver ${FFMPEG_libavformat_VERSION})"   ELSE NO)
   status("      avutil:"       FFMPEG_libavutil_FOUND     THEN "YES (ver ${FFMPEG_libavutil_VERSION})"     ELSE NO)
--- a/cmake/OpenCVFindLibsVideo.cmake
+++ b/cmake/OpenCVFindLibsVideo.cmake
@@ -213,12 +213,22 @@ endif(WITH_XIMEA)
 # --- FFMPEG ---
 ocv_clear_vars(HAVE_FFMPEG)
 if(WITH_FFMPEG)
-  if(WIN32 AND NOT ARM)
-    include("${OpenCV_SOURCE_DIR}/3rdparty/ffmpeg/ffmpeg.cmake")
-    download_win_ffmpeg(FFMPEG_CMAKE_SCRIPT)
-    if(FFMPEG_CMAKE_SCRIPT)
+  if(WIN32 AND NOT ARM)  # TODO: Probably works for ARM, but untested - disabled for now
+    find_package(FFMPEG REQUIRED)
+    if(FFMPEG_FOUND)
       set(HAVE_FFMPEG TRUE)
-      include("${FFMPEG_CMAKE_SCRIPT}")
+      if(MSVC64 OR MINGW64)
+        set(FFMPEG_SUFFIX _64)
+      endif()
+
+      # lib name for cmake project
+      set(FFOPENCV_LIB "ffopencv")
+
+      # DLL output name
+      set(FFOPENCV_OUTPUT_NAME "opencv_ffmpeg${OPENCV_DLLVERSION}${FFMPEG_SUFFIX}")
+
+      # build OpenCV FFMPEG wrapper API DLL file
+      add_subdirectory("${OpenCV_SOURCE_DIR}/3rdparty/ffmpeg")
     endif()
   elseif(PKG_CONFIG_FOUND)
     ocv_check_modules(FFMPEG libavcodec libavformat libavutil libswscale)
--- a/modules/videoio/CMakeLists.txt
+++ b/modules/videoio/CMakeLists.txt
@@ -270,7 +270,7 @@ if(WIN32 AND HAVE_FFMPEG)
   endif()
 
   set(ffmpeg_dir "${OpenCV_BINARY_DIR}/3rdparty/ffmpeg")
-  set(ffmpeg_bare_name "opencv_ffmpeg${FFMPEG_SUFFIX}.dll")
+  set(ffmpeg_bare_name "opencv_ffmpeg${OPENCV_DLLVERSION}${FFMPEG_SUFFIX}.dll")
   set(ffmpeg_bare_name_ver "opencv_ffmpeg${OPENCV_DLLVERSION}${FFMPEG_SUFFIX}.dll")
   set(ffmpeg_path "${ffmpeg_dir}/${ffmpeg_bare_name}")
 
@@ -292,8 +292,8 @@ if(WIN32 AND HAVE_FFMPEG)
   install(FILES "${ffmpeg_path}" DESTINATION ${OPENCV_BIN_INSTALL_PATH} COMPONENT libs RENAME "${ffmpeg_bare_name_ver}")
 
   if(INSTALL_CREATE_DISTRIB)
-    install(FILES "${ffmpeg_dir}/opencv_ffmpeg.dll" DESTINATION "bin/" COMPONENT libs RENAME "opencv_ffmpeg${OPENCV_DLLVERSION}.dll")
-    install(FILES "${ffmpeg_dir}/opencv_ffmpeg_64.dll" DESTINATION "bin/" COMPONENT libs RENAME "opencv_ffmpeg${OPENCV_DLLVERSION}_64.dll")
+    install(FILES "${ffmpeg_dir}/opencv_ffmpeg${OPENCV_DLLVERSION}.dll" DESTINATION "bin/" COMPONENT libs RENAME "opencv_ffmpeg${OPENCV_DLLVERSION}.dll")
+    install(FILES "${ffmpeg_dir}/opencv_ffmpeg${OPENCV_DLLVERSION}_64.dll" DESTINATION "bin/" COMPONENT libs RENAME "opencv_ffmpeg${OPENCV_DLLVERSION}_64.dll")
   endif()
 endif()
 endmacro()
--- a/modules/videoio/src/cap_ffmpeg_impl.hpp
+++ b/modules/videoio/src/cap_ffmpeg_impl.hpp
@@ -1580,7 +1580,7 @@ static AVStream *icv_add_video_stream_FFMPEG(AVFormatContext *oc,
 #endif
 
 #if LIBAVCODEC_BUILD >= CALC_FFMPEG_VERSION(52, 42, 0)
-    st->avg_frame_rate = (AVRational){frame_rate, frame_rate_base};
+    st->avg_frame_rate = {frame_rate, frame_rate_base};
 #endif
 
     return st;
